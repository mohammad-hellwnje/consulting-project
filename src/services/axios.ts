// services/axios.ts
import axios from "axios";
import { getApiUrl } from "../config/environment";

export const api = axios.create({
  baseURL: getApiUrl(),
  withCredentials: true, // โ ุฅุฑุณุงู ุงูููููุฒ ุชููุงุฆููุง
  headers: {
    Accept: "application/json",
  },
});

// ๐ฏ Interceptor ููุฑุฏูุฏ โ ูุชุฌุฏูุฏ ุงูุชููู ุชููุงุฆููุง ุนูุฏ ุงูุชูุงุก ุตูุงุญูุฉ accessToken
api.interceptors.response.use(
  (response) => response, // ูู ุดูุก ุชูุงู
  async (error) => {
    const originalRequest = error.config;

    // ุฅุฐุง ูุงู ุงูุฎุทุฃ ุจุณุจุจ ุงูุชูุงุก ุงูุชููู ููู ูุฌุฑุจ ุงูุชุฌุฏูุฏ ุจุนุฏ
    if (error.response?.status === 401 && !originalRequest._retry) {
      originalRequest._retry = true;

      try {
        // ุทูุจ ูุชุฌุฏูุฏ accessToken ุจุงุณุชุฎุฏุงู refreshToken (ุงูุฐู ููุฌูุฏ ูู ุงูููููุฒ)
        await api.post("/auth/refresh-token");

        // ุฅุนุงุฏุฉ ุฅุฑุณุงู ุงูุฑููููุณุช ุงูุฃุตูู ุจุนุฏ ูุฌุงุญ ุงูุชุฌุฏูุฏ
        return api(originalRequest);
      } catch (refreshError) {
        console.error("โ Token refresh failed:", refreshError);

        // ูู ุญุงู ูุดู ุงูุชุฌุฏูุฏุ ูููููุง ูุณุญ ุจูุงูุงุช ุงููุณุชุฎุฏู ูุชูุฌููู ูุชุณุฌูู ุงูุฏุฎูู
        localStorage.removeItem("currentUser");
        window.location.href = "/login";
      }
    }

    // ุฅุฐุง ูุงู ุงูุฎุทุฃ ูู ููุน ุขุฎุฑ
    return Promise.reject(error);
  }
);
